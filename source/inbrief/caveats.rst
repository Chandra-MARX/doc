.. _caveats:

************************
Current caveats for MARX
************************

Use of the EDSER Subpixel Algorithm with SAOTrace/Chart Rays
============================================================

One of the :ref:`highlights` in |marx| 5 is the ability
to use the EDSER subpixel algorithm to randomize chip coordinates.
This algorithm works by shifting the event position from the center
of the pixel by an amount *(dx,dy)* that depends upon energy and
flight grade. However, the values of *(dx,dy)* in the Chandra
CALDB form a small discrete set, not a continuous one.  As a result,
in the absence of dither the EDSER algorithm will produce a PSF that
consists of a number of sharp peaks.  It is the dither motion of the
telescope that smooths this peakiness out, and as such is an
integral part of the EDSER algorithm.

Support for dither was added to version 2 of `SAOTrace`_.  Older
versions (as well as `ChaRT`_) are incapable of generating dithered
rays.  If you use rays generated by `SAOTrace`_ version 1 (`ChaRT`_)
then you will need to turn off subpixel randomization by running
:marxtool:`marx2fits` with the ``--pixadj=RANDOMIZE`` option to avoid the
peakiness outlined above.  Version 2 rays do not require this option.

Spatial Dependence of the Quantum Efficiency
============================================
The current version of |marx| does not incorporate the QE uniformity
maps and bad-pixel files that give rise to spatial variation in the
QE.  Consequently, exposure maps and ARFs created by default in \ciao
will be inconsistent with MARX simulations.  For simulated
observations on ACIS-S3, this difference should be small since spatial
variations in the QE are relatively small on this CCD. However,
simulated ACIS-I observations will be effected to a greater degree due
to the larger QE variations produced by CTI effects.

For users of `CIAO`_ 2.3 and higher, the tools :ciao:`mkarf` and :ciao:`mkinstmap`
include the ability to turn off the QE uniformity maps through the use
of :ciao:`ardlib` qualifiers.  For example, a calling sequence like::

    unix%  mkarf detsubsys="ACIS-7;uniform;bpmask=0" ......

will produce an ARF on ACIS-7 (ACIS-S3) but with bad pixel processing
disabled (``bpmask=0``) and without the effects of the CALDB
non-uniformity files included.  The resulting ARF will be consistent
with a |marx| simulation.  A similar call to :ciao:`mkinstmap` can
be used in conjunction with :ciao:`mkexpmap` to create exposure maps
appropriate for |marx| simulations.  This technique is illustrated in :ref:`ex-ciao`.


ACIS Response Functions
========================
`CIAO`_ includes a couple of different tools for creating ACIS response
matrices (RMFs): :ciao:`mkacisrmf` and :ciao:`mkrmf`.  The :ciao:`mkacisrmf` tool is
designed for the analysis of CTI corrected data, whereas :ciao:`mkrmf`
creates an RMF for non-CTI corrected data.  The response algorithm
implemented in |marx| is based upon the calibration data used by
:ciao:`mkrmf`.  Hence the PHAs generated by |marx| for the ACIS detector
represent non-CTI corrected values and as such are consistent with the
responses generated by :ciao:`mkrmf` but not with :ciao:`mkacisrmf`.  Consequently,
users should continue to use the :ciao:`mkrmf` to create RMFs that
are consistent with their |marx| simulations.  More information about
using :ciao:`mkrmf` in the context of a |marx| simulation may be found in :ref:`ex-ciao`.

Alternatively, :marxtool:`marxrsp` may be used to apply *any* RMF to a |marx|
simulation with the caveat that the mapping from photon energy to PHA
does not vary over the detector.

Mismatch between the FEF-based response and the CALDB order-sorting tables
==========================================================================
As mentioned above, |marx| generates non-CTI corrected PHA values. This
is accomplished by mapping the incident photon energy to a PHA value
using a probability from derived from the most recent non-CTI
calibration data (CALDB ``acisD2000-01-29fef_phaN0005.fits``).  The CIAO
tool :ciao:`tg_resolve_events` assigns a diffracted order to each event
by comparing the event's ACIS energy to its dispersion coordinate.
The ACIS energy window for a particular order is tabulated in a
CALDB order-sorting table (OSIP).

For non-CTI corrected data, the CALDB order sorting table
(``acisD2000-01-29osipN0006.fits``) was computed using a much older
version of the non-CTI response data
(``acisD2000-01-29fef_phaN0002.fits``).  These files
(``acisD2000-01-29fef_phaN0002.fits`` vs ``acisD2000-01-29fef_phaN0005.fits``)
differ mainly in the region around the Si K edge (~1.8 keV).  As such,
a comparison of a |marx| spectrum with the expected spectrum
of the input model will show strong systematic residuals near 1.8 keV.

.. todo::

   To properly account for this effect, :ciao:`tg_resolve_events` should use
   an order-sorting table derived from ``acisD2000-01-29fef_phaN0005.fits``.
   Such a table can be found
   \href{caldb/acisD2000-01-29osipN0007.fits}{here}.  To make use of it,
   run *both* :ciao:`tg_resolve_events` and :ciao:`mkgarf` with the ``osipfile``
   parameter set to the name of the file.


LETG+HRC Line Widths
====================

In standard Chandra pipeline processing, the motion of the observatory
over the course of an observation is computed and stored in the aspect
solution (ASOL) file.  The tool :marxtool:`marxasp` replicates this behavior and
produces an aspect solution file for a given |marx| simulation. A
number of factors contribute to the accuracy or inaccuracy of Chandra
aspect reconstructions. In :marxtool:`marxasp`, these noise terms are represented
empirically using the ``sigma`` parameters in ``marxasp.par``. The
default values for these noise terms have been calibrated to be
consistent with HETG+ACIS observations and will give erroneously
narrow line widths when used with LETG+HRC simulations. Users wishing
to simulate LETG+HRC instrument combinations should adjust these
values before running :marxtool:`marxasp`.  For example, a calling sequence of the
form::

   unix% marxasp RA_Sigma=0.34 Dec_Sigma=0.34 Roll_Sigma=0.34 ......

will produce an ASOL file consistent with current pipeline processing
for LETG+HRC datasets.

ISIS Pileup Fitting Kernel
==========================

The default parameters for the pileup fitting kernel in `ISIS`_, but also in
`Sherpa`_ and `XSpec`_ have been
calibrated for point source extractions. Specifically, the values
correspond to a circular extraction region 4 ACIS pixels in radius.
Although |marx| can be used to include the effects of photon
pileup for any arbitrary spatial and spectral source model, the
fitting kernel may need to be adjusted for larger extraction
regions. In particular, the ``psffrac`` parameter represents the
fraction of the Chandra PSF contained within the extraction region and
may need to be increased for larger regions. Note, however, that for
real data, larger extraction regions will include a higher fraction of
unpiled background photons complicating the fitting of the piled
source spectrum.  As such, it is recommended that this value be
allowed to vary during the spectral fit.  See the `ISIS`_ manual for
more discussion of the pileup fitting kernel.

Chandra Aimpoint Drift
======================

|marx| does not currently take into account of temporal drift in 
Chandra's HRMA aimpoint. Fortunately the effect of the drift is 
generally negligible and should not be a concern for Chandra proposers. 

